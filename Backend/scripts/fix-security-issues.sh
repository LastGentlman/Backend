#!/bin/bash

# ===== SCRIPT PARA SOLUCIONAR PROBLEMAS DE SEGURIDAD DETECTADOS POR SUPABASE LINTER =====
# Este script aplica las correcciones necesarias para los warnings del linter de Supabase

set -e

echo "üîß Aplicando correcciones de seguridad para la base de datos..."

# Colores para output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Funci√≥n para mostrar mensajes
show_message() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

show_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

show_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Verificar si tenemos acceso a Supabase
check_supabase_connection() {
    show_message "Verificando conexi√≥n con Supabase..."
    
    if ! command -v supabase &> /dev/null; then
        show_error "Supabase CLI no est√° instalado. Inst√°lalo con: npm install -g supabase"
        exit 1
    fi
    
    if [ -z "$SUPABASE_URL" ] || [ -z "$SUPABASE_ANON_KEY" ]; then
        show_warning "Variables de entorno SUPABASE_URL y SUPABASE_ANON_KEY no est√°n configuradas"
        show_warning "Aseg√∫rate de tener acceso al proyecto de Supabase"
    fi
}

# Aplicar migraci√≥n de funciones
apply_function_security_migration() {
    show_message "Aplicando migraci√≥n de seguridad para funciones..."
    
    local migration_file="$(dirname "$0")/../migrations/fix_function_security.sql"
    
    if [ ! -f "$migration_file" ]; then
        show_error "Archivo de migraci√≥n no encontrado: $migration_file"
        exit 1
    fi
    
    show_message "Ejecutando migraci√≥n desde: $migration_file"
    show_warning "Nota: Debes ejecutar este script SQL en el SQL Editor de Supabase manualmente"
    show_warning "O usar supabase db push si tienes configurado el proyecto localmente"
    
    echo ""
    echo "üìã Archivo de migraci√≥n creado en:"
    echo "   $migration_file"
    echo ""
    echo "üîß Para aplicar los cambios:"
    echo "   1. Copia el contenido del archivo de migraci√≥n"
    echo "   2. Ve al SQL Editor en tu dashboard de Supabase"
    echo "   3. Pega y ejecuta el script"
    echo "   4. O usa: supabase db push (si tienes proyecto local configurado)"
}

# Mostrar instrucciones para habilitar protecci√≥n de contrase√±as filtradas
show_password_protection_instructions() {
    show_message "Instrucciones para habilitar protecci√≥n de contrase√±as filtradas..."
    
    echo ""
    echo "üîê PROTECCI√ìN DE CONTRASE√ëAS FILTRADAS"
    echo "======================================"
    echo ""
    echo "Para habilitar la protecci√≥n contra contrase√±as filtradas:"
    echo ""
    echo "1. Ve a tu dashboard de Supabase"
    echo "2. Navega a Authentication > Settings"
    echo "3. Busca la secci√≥n 'Password Protection'"
    echo "4. Habilita 'Leaked Password Protection'"
    echo ""
    echo "Esto activar√° la verificaci√≥n autom√°tica contra la base de datos"
    echo "HaveIBeenPwned.org para prevenir el uso de contrase√±as comprometidas."
    echo ""
    echo "üìö Documentaci√≥n oficial:"
    echo "   https://supabase.com/docs/guides/auth/password-security#password-strength-and-leaked-password-protection"
    echo ""
}

# Funci√≥n principal
main() {
    echo "üöÄ Iniciando proceso de correcci√≥n de seguridad..."
    echo ""
    
    check_supabase_connection
    apply_function_security_migration
    show_password_protection_instructions
    
    echo ""
    show_message "‚úÖ Proceso completado!"
    echo ""
    echo "üìã RESUMEN DE ACCIONES REQUERIDAS:"
    echo "================================="
    echo "1. ‚úÖ Archivos de migraci√≥n creados"
    echo "2. ‚è≥ Aplicar migraci√≥n SQL en Supabase (pendiente)"
    echo "3. ‚è≥ Habilitar protecci√≥n de contrase√±as filtradas (pendiente)"
    echo ""
    echo "Una vez completadas estas acciones, todos los warnings del linter"
    echo "de Supabase deber√≠an estar resueltos."
}

# Ejecutar funci√≥n principal
main "$@" 